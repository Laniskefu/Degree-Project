from enum import Enum


# Abstract Syntax Tree Node Type
class ASTNodeType(Enum):
    # Program
    STMT_LIST = "STATEMENT LIST"

    # Statements
    EXP_STMT = "EXPRESSION STATEMENT"
    CLR_STMT = "CLEAR STATEMENT"
    SEL_STMT = "SELECTION STATEMENT"
    ITR_STMT = "ITERATION STATEMENT"
    JMP_STMT = "JUMP STATEMENT"

    # Statement Components
    EO_STMT = "END OF STATEMENT"
    ID_LIST = "IDENTIFIER LIST"
    SEL_ClS = "SELECTION CLAUSE"
    ITR_CLS = "ITERATION CLAUSE"

    # Expressions
    ASS_EXP = "ASSIGNMENT EXPRESSION"
    CLN_EXP = "COLON EXPRESSION"
    UOP_EXP = "UNARY OPERATION EXPRESSION"
    BOP_EXP = "BINARY OPERATION EXPRESSION"
    SCIENTIFIC_LIT = "SCIENTIFIC LITERAL EXPRESSION" #SCIENTIFIC_LIT
    IDENTIFIER_EXP = "IDENTIFIER EXPRESSION"
    NUMBER_LIT_EXP = "NUMBER LITERAL EXPRESSION"
    STRING_LIT_EXP = "STRING LITERAL EXPRESSION"
    VECTOR_LIT_EXP = "CHAR ARRAY LITERAL EXPRESSION"
    ARRAY_LIST_EXP = "ARRAY LIST EXPRESSION"
    INDEX_LIST_EXP = "INDEX LIST EXPRESSION"
    INDEXING_EXP = "INDEXING EXPRESSION"
    FUNCTION_EXP = "FUNCTION EXPRESSION"

    # Primary
    #IDENTIFIER = "IDENTIFIER"
    #NUMBER_LIT = "NUMBER LITERAL"
    #SCIENTIFIC_LIT = "SCIENTIFIC LITERAL"  #
    #STRING_LIT = "STRING LITERAL"
    #VECTOR_LIT = "CHAR ARRAY LITERAL"
    #ARRAY_LIST = "ARRAY LIST"
    #INDEX_LIST = "INDEX LIST"